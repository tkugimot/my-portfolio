{"version":3,"sources":["feature/helloSlice.ts","app/rootReducer.ts","app/store.ts","app/Theme.tsx","component/top/inTab/About.tsx","component/top/ProfileImage.tsx","component/top/SocialLinks.tsx","component/top/inTab/Work.tsx","component/top/inTab/Education.tsx","component/top/PageTags.tsx","component/top/Top.tsx","component/Header.tsx","globalStyle.ts","component/Footer.tsx","app/App.tsx","serviceWorker.ts","index.tsx","static/images/toshi.jpg"],"names":["helloSlice","createSlice","slice","initialState","reducers","rootReducer","combineReducers","hello","helloReducer","store","configureStore","reducer","theme","createMuiTheme","typography","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","about","title","padding","body","eachContent","marginBottom","backgroundColor","profile","skill","profileList","textAlign","About","classes","Grid","item","xs","container","justify","className","alignItems","Typography","variant","component","gutterBottom","color","List","ListItem","ListItemText","progress","animate","animationDuration","responsive","size","lineWidth","progressColor","bgColor","textColor","showPercentage","showPercentageSymbol","profileImage","margin","bigAvatar","width","height","boxShadow","ProfileImage","Avatar","alt","src","social","socialIcon","SocialLinks","href","icon","work","button","marginTop","spacing","marginRight","actionsContainer","resetContainer","Work","React","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","map","label","index","Step","key","StepLabel","StepContent","step","getStepContent","Button","disabled","onClick","length","Education","pageTabs","header","eachTab","TabPanel","props","children","value","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","PageTags","useTheme","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","aria-label","Tab","axis","direction","onChangeIndex","dir","helloWorld","myname","fontWeight","socialLinks","Top","Header","createGlobalStyle","footer","fontFamily","Footer","library","add","fas","fab","App","MuiThemeProvider","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a38048f4.chunk.js","sourcesContent":["import {createSlice} from 'redux-starter-kit'\n\nexport interface HelloState {\n    id: number\n}\n\nexport const initialState: HelloState[] = [];\n\nconst helloSlice = createSlice({\n    slice: 'hello',\n    initialState,\n    reducers: {\n    }\n});\n\nexport default helloSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport helloReducer from \"../feature/helloSlice\";\n\nconst rootReducer = combineReducers({\n    hello: helloReducer\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport default rootReducer\n","import { configureStore, Action } from 'redux-starter-kit'\nimport { ThunkAction } from 'redux-thunk'\n\nimport rootReducer, { RootState } from './rootReducer'\n\nconst store = configureStore({\n    reducer: rootReducer\n});\n\nexport type AppDispatch = typeof store.dispatch\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>\n\nexport default store\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n    typography: {\n        \"fontFamily\": \"\\\"Ubuntu\\\", \\\"Lato\\\", \\\"Roboto\\\", \\\"sans-serif\\\"\",\n    },\n    palette: {\n        primary: {\n            light: '#a1887f', // 基本の色よりも明るい色\n            main: '#6d4c41', // 基本の色\n            dark: '#3e2723', // 基本の色よりも暗い色\n            contrastText: '#fff', // テキストの色\n        },\n        secondary: {\n            light: '#ffb74d',\n            main: '#fb8c00',\n            dark: '#e65100',\n            contrastText: '#000',\n        },\n    },\n});\n","import React from 'react';\nimport {Grid, List, ListItem, ListItemText, makeStyles, Typography} from \"@material-ui/core\";\nimport {Circle} from \"react-circle\";\n\nconst useStyles = makeStyles({\n  about: {\n  },\n  title: {\n    padding: \"24px\"\n  },\n  body: {\n  },\n  eachContent: {\n    marginBottom: '16px',\n    padding: '10px',\n    backgroundColor: 'white'\n  },\n  profile: {\n    padding: \"0 8px\"\n  },\n  skill: {\n    padding: \"0 8px\"\n  },\n  profileList: {\n    textAlign: \"left\"\n  }\n});\n\nconst About: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n      <Grid item xs={12} container justify=\"center\"  className={classes.about}>\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"secondary\" className={classes.title}>\n            Get to know me.\n          </Typography>\n        </Grid>\n        <Grid item xs={12} container className={classes.profile}>\n          <Grid item xs={12} container justify=\"center\"  >\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n              My Profile\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} container justify=\"center\" className={classes.eachContent} >\n            <Typography variant=\"body1\" gutterBottom className={classes.body}>\n              I am a software engineer, web developer and a problem solver.\n              I am always trying to improve people's lives, and looking for what makes the world a better place.\n              Other than work, I love playing baseball, watching dramas/movies and spending time with my family/friends.\n            </Typography>\n\n            <List className={classes.profileList}>\n              <ListItem>\n                <ListItemText\n                    primary=\"Name: Toshimitsu Kugimoto\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Place of Birth: Fukuoka, Japan\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Current Location: Tokyo, Japan\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Current Job: Back-end Web Developer\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Current Workplace: Yahoo! Japan\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Education: Master's in Computer Science, Chiba University\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Email: toshimitsu_kugimoto@yahoo.co.jp\"\n                />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} container className={classes.skill}>\n          <Grid item xs={12} container justify=\"center\" >\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n              Skill\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} container justify=\"center\" className={classes.eachContent} >\n            <Grid item xs={12} container justify=\"center\" className={classes.eachContent} >\n              <Typography variant=\"body1\" gutterBottom>\n                I have been developing many kinds of web software for years.\n                you will find some of my favorite skills in the list below. Recently I have been\n                focusing on writing back-end services with Java and Spring Boot at work, but I have a\n                strong interest in all kinds of techniques related to Internet.\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} container justify=\"center\" >\n              <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n                Language\n              </Typography>\n            </Grid>\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={80}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Java\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={60}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Python\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={20}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  TypeScript\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={20}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Rust\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={12} container justify=\"center\" >\n              <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n                Framework, Library\n              </Typography>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={80}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Spring Boot\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={60}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Ruby on Rails\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={30}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  React, Redux\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={50}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Flask\n                </Typography>\n              </Grid>\n            </Grid>\n\n\n            <Grid item xs={12} container justify=\"center\" >\n              <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n                Infrastructure\n              </Typography>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={80}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Chef\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={6} container justify=\"center\" className={classes.eachContent} >\n              <Grid item xs={12} container justify=\"center\" >\n                <Circle\n                    progress={50}\n                    animate={true} // Boolean: Animated/Static progress\n                    animationDuration=\"1s\" // String: Length of animation\n                    responsive={false} // Boolean: Make SVG adapt to parent size\n                    size=\"100\" // String: Defines the size of the circle.\n                    lineWidth=\"25\" // String: Defines the thickness of the circle's stroke.\n                    progressColor=\"Maroon\" // String: Color of \"progress\" portion of circle.\n                    bgColor=\"Moccasin\" // String: Color of \"empty\" portion of circle.\n                    textColor=\"Maroon\" // String: Color of percentage text color.\n                    showPercentage={true} // Boolean: Show/hide percentage.\n                    showPercentageSymbol={true} // Boolean: Show/hide only the \"%\" symbol.\n                />\n              </Grid>\n              <Grid item xs={12} container justify=\"center\"  >\n                <Typography variant=\"subtitle2\" gutterBottom color=\"secondary\">\n                  Docker, k8s\n                </Typography>\n              </Grid>\n            </Grid>\n\n            ...etc\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} container className={classes.skill}>\n          <Grid item xs={12} container justify=\"center\">\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"primary\" className={classes.title}>\n              License\n            </Typography>\n          </Grid>\n\n          <Grid item xs={12} container justify=\"center\" className={classes.eachContent}>\n            <List className={classes.profileList}>\n              <ListItem>\n                <ListItemText\n                    primary=\"TOEIC 935\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"Applied Information Technology Engineer Examination\"\n                />\n              </ListItem>\n              <ListItem>\n                <ListItemText\n                    primary=\"First degree black belt of Shorinji Kenpo\"\n                />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      </Grid>\n  )\n};\n\nexport default About;\n","import React from 'react';\nimport {Avatar, Grid, makeStyles} from \"@material-ui/core\";\nimport profileImage from '../../static/images/toshi.jpg';\n\nconst useStyles = makeStyles({\n    profileImage: {\n        margin: \"20px 0px\"\n    },\n    bigAvatar: {\n        margin: 10,\n        width: 120,\n        height: 120,\n        boxShadow: \"1px 0 5px 1px #999\"\n    },\n});\n\nconst ProfileImage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\" className={classes.profileImage}>\n            <Avatar alt=\"Remy Sharp\" src={profileImage} className={classes.bigAvatar} />\n        </Grid>\n    )\n};\n\nexport default ProfileImage;","import React from 'react';\nimport {Grid, makeStyles} from \"@material-ui/core\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    social: {\n        margin: \"50px 0\",\n    },\n    socialIcon: {\n        margin: \"0px 15px\",\n    }\n});\n\nconst SocialLinks: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\" className={classes.social}>\n            <div className={classes.socialIcon}>\n                <a href=\"https://www.facebook.com/tosimitu.kugimoto\"><FontAwesomeIcon size=\"2x\" icon={['fab', 'facebook']} /></a>\n            </div>\n            <div className={classes.socialIcon}>\n                <a href=\"https://github.com/tkugimot\"><FontAwesomeIcon size=\"2x\" icon={['fab', 'github']} /></a>\n            </div>\n            <div className={classes.socialIcon}>\n                <a href=\"https://www.instagram.com/toshimitsukugimoto\"><FontAwesomeIcon size=\"2x\" icon={['fab', 'instagram']} /></a>\n            </div>\n            <div className={classes.socialIcon}>\n                <a href=\"https://www.linkedin.com/in/toshimitsu-kugimoto/\"><FontAwesomeIcon size=\"2x\" icon={['fab', 'linkedin']} /></a>\n            </div>\n            <div className={classes.socialIcon}>\n                <a href=\"https://note.mu/tkugimot\"><FontAwesomeIcon size=\"2x\" icon=\"sticky-note\" /></a>\n            </div>\n        </Grid>\n    );\n};\n\nexport default SocialLinks;\n","import React from 'react';\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  IconButton,\n  List,\n  ListItem, ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles, Paper, Step, StepContent, StepLabel, Stepper,\n  Typography\n} from \"@material-ui/core\";\nimport {orange} from \"@material-ui/core/colors\";\nimport {theme} from \"../../../app/Theme\";\n\nconst useStyles = makeStyles({\n  work: {\n    width: '100%'\n  },\n  title: {\n    padding: \"24px\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n});\n\nfunction getSteps() {\n  return ['Web Developer at Yahoo! Japan', 'Web Developer at PayPay Corporation', 'Web Developer at Yahoo! Japan'];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return `Update the PHP version of softwares from 5.6 to 7.1, Recreating the software which is originally made by using Seasar2 framework for referencing\nSettlement-related information by using Spring Boot framework, Build feature to show PayPay balance in Yahoo Wallet, etc.`;\n    case 1:\n      return 'Build KYC(Know Your Customer), Payment/Payout management, Bank master for payment/payout features, etc.';\n    case 2:\n      return 'Build KYC(Know Your Customer), Payment/Payout management, Bank master for payment/payout features, etc.';\n    default:\n      return 'Designed and developed both back-end and front-end systems for the new Yahoo! Wallet to replace old low-maintainability systems with high-serviceability and high-performance (up to 5000 requests per second maximum) systems.';\n  }\n}\n\nconst Work: React.FC = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n      <Grid item xs={12} container justify=\"center\" className={classes.work}>\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"secondary\" className={classes.title}>\n            My Work Experience\n          </Typography>\n        </Grid>\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\" className={classes.work}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.work}>\n            {steps.map((label, index) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  <StepContent>\n                    <Typography>{getStepContent(index)}</Typography>\n                    <div className={classes.actionsContainer}>\n                      <div>\n                        <Button\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className={classes.button}\n                        >\n                          Back\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={activeStep === steps.length - 1}\n                        >\n                          Next\n                        </Button>\n                      </div>\n                    </div>\n                  </StepContent>\n                </Step>\n            ))}\n          </Stepper>\n        </Grid>\n      </Grid>\n  )\n};\n\nexport default Work;\n","import React from 'react';\nimport {\n  Button,\n  Checkbox,\n  Grid,\n  IconButton,\n  List,\n  ListItem, ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles, Paper, Step, StepContent, StepLabel, Stepper,\n  Typography\n} from \"@material-ui/core\";\nimport {orange} from \"@material-ui/core/colors\";\nimport {theme} from \"../../../app/Theme\";\n\nconst useStyles = makeStyles({\n  work: {\n    width: '100%'\n  },\n  title: {\n    padding: \"24px\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n});\n\nfunction getSteps() {\n  return ['Fukuoka Prefectural Kurume High School',\n    'Chiba University',\n    'Chiba University'];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return `General course`;\n    case 1:\n      return 'Faculty of Engineering, Image Science.';\n    case 2:\n      return 'Graduate School of Advanced Integration Science, Department of Information Science. Spent one year at University of Eastern Finland, Computer Science as an exchange student.';\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst Education: React.FC = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function handleNext() {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  function handleBack() {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  }\n\n  function handleReset() {\n    setActiveStep(0);\n  }\n\n  return (\n      <Grid item xs={12} container justify=\"center\" className={classes.work}>\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n          <Typography variant=\"h5\" component=\"h5\" gutterBottom color=\"secondary\" className={classes.title}>\n            My School Experience\n          </Typography>\n        </Grid>\n        <Grid item xs={12} container justify=\"center\" alignItems=\"center\" className={classes.work}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.work}>\n            {steps.map((label, index) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                  <StepContent>\n                    <Typography>{getStepContent(index)}</Typography>\n                    <div className={classes.actionsContainer}>\n                      <div>\n                        <Button\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className={classes.button}\n                        >\n                          Back\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={activeStep === steps.length - 1}\n                        >\n                          Next\n                        </Button>\n                      </div>\n                    </div>\n                  </StepContent>\n                </Step>\n            ))}\n          </Stepper>\n        </Grid>\n      </Grid>\n  )\n};\n\nexport default Education;\n","import React, {useState} from 'react';\nimport {AppBar, Box, Grid, makeStyles, Tab, Tabs, Typography, useTheme} from \"@material-ui/core\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport About from \"./inTab/About\";\nimport Work from \"./inTab/Work\";\nimport Education from \"./inTab/Education\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n}\n\nconst useStyles = makeStyles({\n    socialIcon: {\n        padding: \"0 10px\"\n    },\n    pageTabs: {\n        margin: \"20px 0px\",\n    },\n    header: {\n        backgroundColor: \"white\",\n    },\n    eachTab: {\n        width: \"100%\",\n        backgroundColor: '#fffbf0'\n    }\n});\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst PageTags: React.FC = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = useState(0);\n\n    function handleChange(event: React.ChangeEvent<{}>, newValue: number) {\n        setValue(newValue);\n    }\n\n    function handleChangeIndex(index: number) {\n        setValue(index);\n    }\n\n    return (\n        <Grid item xs={12} container justify=\"center\" className={classes.pageTabs}>\n            <AppBar position=\"static\" color=\"default\" className={classes.header}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"About\" {...a11yProps(0)} />\n                    <Tab label=\"Work\" {...a11yProps(1)} />\n                    <Tab label=\"Education\" {...a11yProps(2)} />\n                    {/*<Tab label=\"Resume\" {...a11yProps(3)} />*/}\n                </Tabs>\n            </AppBar>\n            <div className={classes.eachTab}>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                >\n                    <TabPanel value={value} index={0} dir={theme.direction}>\n                        <About />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        <Work />\n                    </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction}>\n                        <Education />\n                    </TabPanel>\n                    {/*<TabPanel value={value} index={3} dir={theme.direction}>*/}\n                    {/*    Item Four*/}\n                    {/*</TabPanel>*/}\n                </SwipeableViews>\n            </div>\n        </Grid>\n    );\n};\n\nexport default PageTags;\n","import React from 'react';\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport ProfileImage from \"./ProfileImage\";\nimport SocialLinks from \"./SocialLinks\";\nimport PageTags from \"./PageTags\";\n\nconst useStyles = makeStyles({\n    helloWorld: {\n        width: \"100%\",\n        textAlign: \"center\",\n        margin: \"20px 0\",\n    },\n    typography: {\n        width: \"100%\",\n        textAlign: \"center\",\n    },\n    myname: {\n        textAlign: \"center\",\n        fontWeight: 900,\n        margin: \"20px 0px\",\n    },\n    socialLinks: {\n        marginTop: \"50px\"\n    }\n});\n\nconst Top: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n      <Grid container justify=\"center\">\n          <ProfileImage />\n          <Grid item xs={12} container justify=\"center\" alignItems=\"center\">\n              <Typography variant=\"h4\" component=\"h4\" className={classes.helloWorld} gutterBottom>\n                  Hello World :)\n              </Typography>\n              <Typography variant=\"h5\" component=\"h5\" className={classes.myname} gutterBottom>\n                  I'm Toshimitsu Kugimoto.\n              </Typography>\n              <Typography variant=\"h5\" component=\"h5\" className={classes.typography} gutterBottom>\n                  Software Engineer.\n              </Typography>\n          </Grid>\n          <SocialLinks />\n          <PageTags />\n      </Grid>\n    )\n};\n\nexport default Top;","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  header: {\n    marginTop: \"50px\"\n  },\n});\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.header}>\n        {/*<ul>*/}\n        {/*  <li>*/}\n        {/*    <Link to=\"/\">Home</Link>*/}\n        {/*  </li>*/}\n        {/*  <li>*/}\n        {/*    <Link to=\"/about\">About</Link>*/}\n        {/*  </li>*/}\n        {/*</ul>*/}\n      </div>\n  )\n};\n\nexport default Header;\n","import {　createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n@import url(\"https://fonts.googleapis.com/css?family=Lato\");\n@import url(\"https://fonts.googleapis.com/css?family=Roboto\");\n@import url(\"https://fonts.googleapis.com/css?family=Ubuntu\");\n`","import React from 'react';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  footer: {\n    margin: \"50px 0\",\n    textAlign: \"center\",\n    fontFamily: \"Ubuntu\",\n  },\n});\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.footer}>\n        &copy; Toshimitsu Kugimoto (2019)\n      </div>\n  )\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.scss';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport store from \"./store\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from './Theme'\nimport About from \"../component/top/inTab/About\";\nimport Top from \"../component/top/Top\";\nimport Header from \"../component/Header\";\nimport GlobalStyle from \"../globalStyle\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport Footer from \"../component/Footer\";\n\nlibrary.add(fas, fab);\n\nconst App: React.FC = () => {\n  return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <GlobalStyle />\n            <Router basename=\"/my-portfolio\">\n                <div>\n                    <Header />\n                    <Route exact path=\"/\" component={Top} />\n                    <Route path=\"/about\" component={About} />\n                    <Footer />\n                </div>\n            </Router>\n        </Provider>\n      </MuiThemeProvider>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n        (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n        window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/toshi.18a89170.jpg\";"],"sourceRoot":""}